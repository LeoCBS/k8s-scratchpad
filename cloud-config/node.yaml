#cloud-config
write-files:
  - path: /opt/bin/wupiao
    permissions: '0755'
    content: |
      #!/bin/bash
      # [w]ait [u]ntil [p]ort [i]s [a]ctually [o]pen
      [ -n "$1" ] && [ -n "$2" ] && while ! curl --output /dev/null \
        --silent --head --fail \
        http://${1}:${2}; do sleep 1 && echo -n .; done;
      exit $?
  - path: /etc/kube-env
    permissions: 0644
    owner: root
    content: |
      MASTER_IP=192.168.20.10
      KUBE_VERSION=1.5.3

coreos:
  etcd2:
    listen-client-urls: http://0.0.0.0:2379,http://0.0.0.0:4001
    advertise-client-urls: http://0.0.0.0:2379,http://0.0.0.0:4001
    initial-cluster: master=http://192.168.20.10:2380
    proxy: on
  flannel:
    interface: $public_ipv4
  fleet:
    metadata: "role=node"
  units:
    - name: fleet.service
      command: start
    - name: flanneld.service
      command: start
      drop-ins:
        - name: 50-network-config.conf
          content: |
            [Unit]
            Requires=etcd2.service
            [Service]
            ExecStartPre=/usr/bin/etcdctl set /coreos.com/network/config '{"Network":"10.244.0.0/16", "Backend": {"Type": "vxlan"}}'
    - name: docker.service
      command: start
    - name: setup-network-environment.service
      command: start
      content: |
        [Unit]
        Description=Setup Network Environment
        Documentation=https://github.com/kelseyhightower/setup-network-environment
        Requires=network-online.target
        After=network-online.target

        [Service]
        ExecStartPre=-/usr/bin/mkdir -p /opt/bin
        ExecStartPre=/usr/bin/curl -L -o /opt/bin/setup-network-environment -z /opt/bin/setup-network-environment https://github.com/kelseyhightower/setup-network-environment/releases/download/v1.0.0/setup-network-environment
        ExecStartPre=/usr/bin/chmod +x /opt/bin/setup-network-environment
        ExecStart=/opt/bin/setup-network-environment
        RemainAfterExit=yes
        Type=oneshot
    - name: kubelet.service
      command: start
      content: |
        [Unit]
        Description=Kubernetes Kubelet
        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
        Requires=network-online.target
        After=network-online.target

        [Service]
        EnvironmentFile=/etc/kube-env
        # wait for kubernetes master to be up and ready
        #rkt-fly Magic from kubelet-wrapper: https://github.com/coreos/coreos-kubernetes/issues/287
        ExecStartPre=/opt/bin/wupiao ${MASTER_IP} 8080
        ExecStart=/usr/bin/rkt --insecure-options=image --net=host run \
        --volume etc-ssl-certs,kind=host,source=/usr/share/ca-certificates \
        --volume var-lib-docker,kind=host,source=/var/lib/docker \
        --volume var-lib-kubelet,kind=host,source=/var/lib/kubelet \
        --volume os-release,kind=host,source=/usr/lib/os-release \
        --volume run,kind=host,source=/run \
        --mount volume=etc-ssl-certs,target=/etc/ssl/certs \
        --mount volume=var-lib-docker,target=/var/lib/docker \
        --mount volume=var-lib-kubelet,target=/var/lib/kubelet \
        --mount volume=os-release,target=/etc/os-release \
        --mount volume=run,target=/run \
        --stage1-from-dir=stage1-fly.aci \
        quay.io/coreos/hyperkube:v${KUBE_VERSION}_coreos.0 \
        --exec=/hyperkube -- kubelet \
        --api-servers=${MASTER_IP}:8080 \
        --image-gc-high-threshold=60% \
        --image-gc-low-threshold=30% \
        --system-reserved="memory=500m" \
        --low-diskspace-threshold-mb=1024 \
        --kube-reserved="memory=500m" \
        --eviction-hard="memory.available<500Mi" \
        --maximum-dead-containers=1 \
        --allow-privileged=true \
        --hostname-override=$private_ipv4
        Restart=always
        RestartSec=10
    - name: kube-proxy.service
      command: start
      content: |
        [Unit]
        Description=Kubernetes Proxy
        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
        Requires=network-online.target
        After=network-online.target

        [Service]
        EnvironmentFile=/etc/kube-env
        # wait for kubernetes master to be up and ready
        #rkt-fly Magic from kubelet-wrapper: https://github.com/coreos/coreos-kubernetes/issues/287
        ExecStartPre=/opt/bin/wupiao ${MASTER_IP} 8080
        ExecStart=/usr/bin/rkt --insecure-options=image --net=host run \
        --stage1-from-dir=stage1-fly.aci \
        quay.io/coreos/hyperkube:v${KUBE_VERSION}_coreos.0 \
        --exec=/hyperkube -- proxy \
        --master=http://${MASTER_IP}:8080
        Restart=always
        RestartSec=10
  update:
    group: stable
    reboot-strategy: off
